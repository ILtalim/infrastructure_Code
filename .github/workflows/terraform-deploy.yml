name: Terraform Deploy (Apply/Destroy)

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform Action'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy
  push:
    paths:
      - 'main.tf'

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      # - name: Terraform Import - env/dev
      #   run: terraform import aws_secretsmanager_secret.env_dev env/dev || true
      
      # - name: Terraform Import - cloudfront_private_key
      #   run: terraform import aws_secretsmanager_secret.cloudfront_private_key lambda/cdn/private_key2025 || true


      # - name: Cancel deletion for Secrets Manager secrets
      #   run: |
      #     # Cancel deletion for env/dev secret if scheduled
      #     if aws secretsmanager list-secrets --query 'SecretList[?Name==`env/dev` && DeletedDate!=null]' --output text | grep -q env/dev; then
      #       echo "Canceling deletion of secret env/dev"
      #       aws secretsmanager cancel-secret-deletion --secret-id env/dev
      #     else
      #       echo "Secret env/dev not scheduled for deletion"
      #     fi

      #     # Cancel deletion for lambda/cdn/private_key2025 secret if scheduled
      #     if aws secretsmanager list-secrets --query 'SecretList[?Name==`lambda/cdn/private_key2025` && DeletedDate!=null]' --output text | grep -q lambda/cdn/private_key2025; then
      #       echo "Canceling deletion of secret lambda/cdn/private_key2025"
      #       aws secretsmanager cancel-secret-deletion --secret-id lambda/cdn/private_key2025
      #     else
      #       echo "Secret lambda/cdn/private_key2025 not scheduled for deletion"
      #     fi

      - name: Render .env.dev from template
        run: |
          echo "Exporting GitHub secrets as environment variables"
          export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
          export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          export AWS_REGION="${{ secrets.AWS_REGION }}"
          export DOCKER_USERNAME="${{ secrets.DOCKER_USERNAME }}"
          export DOCKER_PASSWORD="${{ secrets.DOCKER_PASSWORD }}"
          export AWS_API_GATEWAY_REST_API_ID="${{ secrets.AWS_API_GATEWAY_REST_API_ID }}"
          export AWS_API_GATEWAY_STAGE_NAME="${{ secrets.AWS_API_GATEWAY_STAGE_NAME }}"
          export AWS_STORAGE_BUCKET_NAME="${{ secrets.AWS_STORAGE_BUCKET_NAME }}"
    
          echo "Rendering .env.dev..."
          envsubst < .env.dev.tpl > .env.dev


      - name: Upload .env.dev to AWS Secrets Manager
        run: |
          echo "Uploading rendered .env.dev to Secrets Manager..."
          aws secretsmanager put-secret-value \
            --secret-id env/dev \
            --secret-string file://.env.dev
          
      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' || github.event_name == 'push' }}
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: terraform destroy -auto-approve
